services:
  # FastAPI Service - REST API
  fastapi:
    build:
      context: .
      dockerfile: Dockerfile.fastapi
    container_name: greek-room-fastapi
    ports:
      - "8001:8001"
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - ./storage:/app/storage
    restart: unless-stopped
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:8001/docs"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 40s
    networks:
      - greek-room-network

  # MCP Server - Model Context Protocol Server
  mcp-server:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    container_name: greek-room-mcp
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - ./storage:/app/storage
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - greek-room-network

  # WhatsApp Bot - Twilio WhatsApp Integration
  whatsapp-bot:
    build:
      context: .
      dockerfile: Dockerfile.whatsapp
    container_name: greek-room-whatsapp
    ports:
      - "5001:5001"
    env_file:
      - .env
    environment:
      - MCP_URL=http://mcp-server:8000/mcp
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - ./storage:/app/storage
    restart: unless-stopped
    depends_on:
      - mcp-server
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - greek-room-network

  # Streamlit App - Web UI for Chat Interface
  streamlit:
    build:
      context: .
      dockerfile: Dockerfile.streamlit
    container_name: greek-room-streamlit
    ports:
      - "8501:8501"
    env_file:
      - .env
    environment:
      - MCP_URL=http://mcp-server:8000/mcp
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - ./storage:/app/storage
    restart: unless-stopped
    depends_on:
      - mcp-server
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - greek-room-network
  
networks:
  greek-room-network:
    driver: bridge

volumes:
  logs:
  data:
  storage:
